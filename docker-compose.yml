version: "3.3"

services:
    # frontend (Nuxtjs)
    web:
        image: node:19

  # frontend (Nuxtjs)
  web:
    image: node:19

    user: node
    
    environment:
      - NODE_ENV=${NODE_ENV}
    
    working_dir: /usr/src/app
    
    volumes:
      - ./app/web:/usr/src/app
    
    command: bash -c "chown -R node:node /usr/src/app && yarn && yarn dev"
    
    ports:
      - 3000:3000
    
    networks:
      - proxy_frontend_net

    restart: on-failure
    
    depends_on:
      - api

  # backend (Nestjs)
  api:
    image: node:19

    user: node
    
    environment:
      - NODE_ENV=${NODE_ENV}
    
    working_dir: /usr/src/app
    
    volumes:
      - ./app/api:/usr/src/app
    
    command: bash -c "chown -R node:node /usr/src/app && npm install && npm run start:dev"
    
    networks:
      - proxy_backend_net

    restart: on-failure
    
    ports:
      - 8000:8000
    
    depends_on:
      - db

  # Database (Postgres)
  db:
    image: postgres:12
    
    env_file:
      - .env
    
    volumes:
      - db-data:/var/lib/postgresql/data

    restart: on-failure
    
    networks:
      - backend_db_net

  # reverse proxy (nginx)
  nginx:
    image: nginx:latest
    
    environment:
      - NODE_ENV=${NODE_ENV}
    
    ports:
      - 80:80
    
    volumes:
      - ./config/default.conf:/etc/nginx/conf.d/default.conf
    
    networks:
      - proxy_frontend_net
      - proxy_backend_net

    restart: on-failure
    
    depends_on:
      - api
      - web

networks:
    proxy_frontend_net:
    proxy_backend_net:
    backend_db_net:

volumes:
    db-data:
